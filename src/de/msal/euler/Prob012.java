package de.msal.euler;

/**
 * What is the value of the first triangle number to have over five hundred
 * divisors?
 * 
 * The sequence of triangle numbers is generated by adding the natural numbers.
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
 * ten terms would be:
 * 
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * 
 * Let us list the factors of the first seven triangle numbers:
 * 
 * 1: 1 3: 1,3 6: 1,2,3,6 10: 1,2,5,10 15: 1,3,5,15 21: 1,3,7,21 28:
 * 1,2,4,7,14,28
 * 
 * We can see that 28 is the first triangle number to have over five divisors.
 * 
 * What is the value of the first triangle number to have over five hundred
 * divisors?
 */

public class Prob012 {

	private static long generateTriangleNumber(long i) {

		long sum = 0;
		for (long j = 1; j <= i; j++) {
			sum += j;
		}

		return sum;
	}

	private static int getDivisorsCount(long i) {
		int count = 0;

		for (long j = 1; j <= Math.sqrt(i); j++) {
			if (i % j == 0)
				count = count + 2;
		}

		if (Math.sqrt(i) * Math.sqrt(i) == i) // if i == square number
			count--;

		return count;
	}

	public static void main(String[] args) {

		for (int i = 1; true; i++) {
			if (getDivisorsCount(generateTriangleNumber(i)) > 500) {
				System.out.println(generateTriangleNumber(i));
				break;
			}
		}

	}

}
